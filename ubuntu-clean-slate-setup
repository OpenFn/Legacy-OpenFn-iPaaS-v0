Setup instructions: for 32-bit Ubuntu 14.10

sudo apt-get rbenv

//Install postgres

sudo apt-get update
sudo apt-get -y install python-software-properties

wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

lsb_release -c //note down the codename, and use it below:

sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ codename-pgdg main" >> /etc/apt/sources.list.d/postgresql.list'

sudo apt-get update
sudo apt-get install postgresql-9.3

sudo su postgres
creatuser -d -s -r taylor

cd into the /etc/postgresql/9.3/main/pg_hba.conf directory and edit pg_hba.conf

Setting up trust authentication for postgres

Ensure you have the following line somewhere at you pg_hba.conf file.

# TYPE  DATABASE        USER            ADDRESS                 METHOD
local   all             all                                     trust

psql -l //to test

//Install Redis

sudo apt-get update
sudo apt-get install build-essential
sudo apt-get install tcl8.5

wget http://download.redis.io/releases/redis-2.8.9.tar.gz
tar xzf redis-2.8.9.tar.gz
cd redis-2.8.9

make

Run the recommended make test:

make test

Finish up by running make install, which installs the program system-wide.

sudo make install

Once the program has been installed, Redis comes with a built in script that sets up Redis to run as a background daemon.

To access the script move into the utils directory:

cd utils

From there, run the Ubuntu/Debian install script:

sudo ./install_server.sh

As the script runs, you can choose the default options by pressing enter. Once the script completes, the redis-server will be running in the background.

You can start and stop redis with these commands (the number depends on the port you set during the installation. 6379 is the default port setting):

sudo service redis_6379 start
sudo service redis_6379 stop

You can then access the redis database by typing the following command:

redis-cli

You now have Redis installed and running. The prompt will look like this:

redis 127.0.0.1:6379> 

To set Redis to automatically start at boot, run:

sudo update-rc.d redis_6379 defaults

//https://www.digitalocean.com/community/tutorials/how-to-install-and-use-redis


//configure GIT

sudo apt-get install git
git config --global color.ui true
git config --global user.name "YOUR NAME"
git config --global user.email "YOUR@EMAIL.com"
ssh-keygen -t rsa -C "YOUR@EMAIL.com"

The next step is to take the newly generated SSH key and add it to your Github account. You want to copy and paste the output of the following command and paste it here.

cat ~/.ssh/id_rsa.pub

Once you've done this, you can check and see if it worked:

ssh -T git@github.com

You should get a message like this:

Hi excid3! You've successfully authenticated, but GitHub does not provide shel

//Set up GIT credentials

cd
git clone git://github.com/sstephenson/rbenv.git .rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
exec $SHELL

git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
exec $SHELL

rbenv install 2.1.5
rbenv global 2.1.5
gem install bundler
rbenv rehash

sudo apt-get install libpq-dev
gem install pg

bundle install
rbenv rehash 

//Install Heroku Toolbelt

wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh

Clone the staging database over
heroku pg:pull HEROKU_POSTGRESQL_PURPLE_URL thebridge_development --app the-staging-bridge

//try to stop this continual fail with rails server

Iâ€™d try do this:

sudo apt-get install libreadline-dev


then uninstall your copy of ruby, and reinstall it, so something like:

rbenv uninstall 2.1.5
rbenv install 2.1.5
rbenv local 2.1.5
gem install bundler
rbenv rehash
bundle install

